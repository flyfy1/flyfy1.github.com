// Generated by CoffeeScript 1.10.0
(function() {
  $.ready(function() {
    var CompleteBox, CompleteResult, ResultSet, c, d, root;
    d = React.DOM;
    c = React.createElement;
    ResultSet = React.createClass({
      render: function() {
        var terms;
        terms = this.props.vals.map(function(t) {
          return d.div({
            className: 'result-term'
          }, d.a({
            href: t[1]
          }, t[0]));
        });
        return d.div({
          className: 'result-set'
        }, d.div({
          className: 'result-set-title'
        }, this.props.title), terms);
      }
    });
    CompleteResult = React.createClass({
      render: function() {
        var ref, result_clz, terms, title, vals;
        terms = [];
        ref = this.props.terms;
        for (title in ref) {
          vals = ref[title];
          terms.push(c(ResultSet, {
            title: title,
            vals: vals
          }));
        }
        result_clz = 'auto-complete-result';
        if (terms.length > 0) {
          result_clz += ' bordered';
        }
        return d.div({
          className: result_clz
        }, d.div({
          className: 'result-parent'
        }, terms));
      }
    });
    CompleteBox = React.createClass({
      getInitialState: function() {
        return {
          terms: {
            'abc is nice:': [['First Blood', 'google.com'], ['Second Blood', 'zhihu.com']],
            'Bloody Hell': [['Hello', 'douban.com']]
          },
          searchTerm: ''
        };
      },
      handleSearchTermChange: function(evt) {
        var v;
        v = evt.target.value;
        return console.log('Changed: ', v);
      },
      render: function() {
        return d.div({
          className: 'auto-complete-box'
        }, d.input({
          placeholder: 'Search',
          onChange: this.handleSearchTermChange,
          value: this.state.searchTerm
        }), c(CompleteResult, {
          ref: 'result',
          terms: this.state.terms
        }));
      }
    });
    root = React.createElement(CompleteBox, null);
    return ReactDOM.render(root, document.getElementById('container'));
  });

}).call(this);
