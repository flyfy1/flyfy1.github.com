<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yangyu's Notes</title><link>https://songyangyu.com/</link><description>Recent content on Yangyu's Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 27 Jul 2022 23:42:01 +0800</lastBuildDate><atom:link href="https://songyangyu.com/index.xml" rel="self" type="application/rss+xml"/><item><title>2022-07-27 - Daily Progress</title><link>https://songyangyu.com/open-diary/2022/07-27-daily-progress/</link><pubDate>Wed, 27 Jul 2022 23:42:01 +0800</pubDate><guid>https://songyangyu.com/open-diary/2022/07-27-daily-progress/</guid><description>In the recent 2 days, I&amp;rsquo;ve spent some good time setting up this blog site&amp;hellip; here&amp;rsquo;s the rough timeline:
before 2022-07-26, I was using Jekyll, and it has been working fine on 2022-07-26, when thinking about improving the blogging, there were a few functionalities that&amp;rsquo;s missing: the googleAnalytics was broken the commenting system was broken as well deployment has been hard &amp;ndash; I have to do it manually, by pushing to gh-pages branch although GitHub uses Jekyll by default, it&amp;rsquo;s missing some plugins that I use so I have to build it manually in order to figure out what went wrong&amp;hellip; I started to read Jekyll&amp;rsquo;s source code it took me 0.</description></item><item><title>Transform Any Website into Desktop App via Electron</title><link>https://songyangyu.com/posts/transform-any-website-into-desktop-app-via-electron/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/transform-any-website-into-desktop-app-via-electron/</guid><description>End Result How it looks (in Ubuntu) in Startup Menu:
How it looks when opened as an App (electron-apps-ubuntu.png)
Motivation I recently started using a Ubuntu Desktop. However, quite a few apps are missing in Ubuntu.
Therefore, I have to use their web version.
Tools ElectronJS: https://www.electronjs.org/ Unity Launchers And Desktop Files: https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles How to Setup Install Electron Globally Electron runs chrome internally, but we can run it like a desktop app.</description></item><item><title>Separation of Concern</title><link>https://songyangyu.com/posts/separation-of-concern/</link><pubDate>Sat, 11 Jan 2020 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/separation-of-concern/</guid><description>Situation When working in big companies like Grab, lots of times I&amp;rsquo;m just solving some simple CRUD.
Meanwhile, lots of my time needed to be spent upon different other things:
make and review pull request deployment fixing failures for functional test and unit test load testing integrated with the logging library Problem Turns out, there&amp;rsquo;re also other teams, solving the same problem again and again. This pattern has several issues:</description></item><item><title>Provide Sufficient Context in the Merge Request</title><link>https://songyangyu.com/posts/provide-sufficient-context-in-the-merge-request/</link><pubDate>Tue, 24 Dec 2019 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/provide-sufficient-context-in-the-merge-request/</guid><description>TL;DR When creating a merge request, we need to include more context information:
describe what you&amp;rsquo;re trying to achieve in this MR why such change is needed What is Context Information A pain point of reviewing a merge request, is to understand the context. The context includes:
what the merge request actually intends to do why such changes are needed are there any other alternatives No Context is bad for Reviewer These context should be communicated properly, so that the reviewer can actually have a clue to justify if the change is necessary &amp;amp; sufficient.</description></item><item><title>Testing Result not Detail</title><link>https://songyangyu.com/posts/testing-result-not-detail/</link><pubDate>Wed, 26 Sep 2018 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/testing-result-not-detail/</guid><description>When writing specs, I think the spec should describe implementation result, but not the implementation detail.
Take the ruby code below for example:
def add(a, b) a + b end one can test like:
expect( add(1,2) ).to eq(3) that&amp;rsquo;s testing the result; but if one write test:
expect( add(1,2) ).to eq(1+2) that&amp;rsquo;s testing the detail.
The problem with testing the detail is that&amp;hellip; say if the dependent method, :+ got changed, then the result would actually be different, but the second spec would still pass.</description></item><item><title>CSRF protection in Rails</title><link>https://songyangyu.com/posts/csrf-protection-in-rails/</link><pubDate>Sat, 08 Apr 2017 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/csrf-protection-in-rails/</guid><description>CSRF(Cross Site Request Forgery) is an attack that forces an end user to execute unwanted actions on a web application in which he/she is currently authenticated.
In this post, I&amp;rsquo;ll explore, in the source code level, how Rails protect itself from CSRF. It has two checks: based on token, and also the origin header.
We&amp;rsquo;ll first look at how rails put the token into the page, then see how the token is checked.</description></item><item><title>on Objective, and Focus</title><link>https://songyangyu.com/posts/on-objective-and-focus/</link><pubDate>Sun, 21 Aug 2016 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/on-objective-and-focus/</guid><description>One should always reflect upon himself&amp;hellip; to keep on the right track, to find out and correct mistakes, and to the greater self-awareness.
&amp;ndash; by Myself.
When reading, what am I reading about? I have been reading a lot this year. Not only the Tech Specs (which I always do), but also the blog posts (which I often do), as well as the books (which I mostly started this year only).</description></item><item><title>Inspirations From Book "Second Machine Age"</title><link>https://songyangyu.com/posts/inspirations-from-book-second-machine-age/</link><pubDate>Sat, 30 Jul 2016 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/inspirations-from-book-second-machine-age/</guid><description>I was reading about the book . It was.. so interesting that I actually prepared for a set of slides, plus, made a talk about this.
Here&amp;rsquo;s the picture after the talk:
I prepared like.. 40 slides; and here&amp;rsquo;re some of my short insiprations.
Steamer Machine is the first machine age.. because the level of development of our human world boost right its invention.
Then the second machine age starts with Information Technology.</description></item><item><title>On Abstraction of Process, People, and Ecosystem</title><link>https://songyangyu.com/posts/on-abstraction-of-process-people-and-ecosystem/</link><pubDate>Mon, 28 Mar 2016 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/on-abstraction-of-process-people-and-ecosystem/</guid><description>Abstraction is a pretty interesting topic. It&amp;rsquo;s needed cuz huamn mind cannot process big data.
I first learnt about abstraction though programming, by professor Seth Gilbert when he was trying to instroduce Stack to us, during my first Algorithm Class.
Since then.. I was fascinated by the idea of abstraction&amp;hellip; and I think it&amp;rsquo;s good to integrate with the idea of esbi quadrant from the &amp;lt;Rich Dad&amp;gt; Book.
Let the journey start.</description></item><item><title>The Strong Weak Person</title><link>https://songyangyu.com/posts/the-strong-weak-person/</link><pubDate>Fri, 25 Mar 2016 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/the-strong-weak-person/</guid><description>Some people are alive.. but they are already dead. Some people has died, but they are still alive.
&amp;ldquo;I want&amp;hellip; but &amp;hellip;&amp;rdquo; is something we have been hearing too often these days.
These including, but not limit to:
I want to improve, but my company doesn&amp;rsquo;t allow me to do so I want to study programming, but I don&amp;rsquo;t have money I want to do more exercise, but I don&amp;rsquo;t have time I want &amp;hellip; but &amp;hellip; You said that you want it, but you are not doing it / not going for it.</description></item><item><title>Winner Takes All</title><link>https://songyangyu.com/posts/winner-takes-all/</link><pubDate>Wed, 02 Mar 2016 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/winner-takes-all/</guid><description>This is a continue, from the last post InEquality.
Unlike traditional business, the internet is actually a much more competitive field &amp;ndash; usually, consumer&amp;rsquo;s need in a certain field, can be fulfilled by a single company; company can only win the competition via diversity.
While for traditional business, due to the issue of scalibility, the market allows multiple companies, with samilar nature of business, build the same product, to exist in the market, together.</description></item><item><title>Inequality</title><link>https://songyangyu.com/posts/inequality/</link><pubDate>Sun, 28 Feb 2016 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/inequality/</guid><description>InEquality All animals are equal, but some animals are more equal than others &amp;ndash; George Orwell, Animal Farm
Inequality exists, everywhere. When I mean unequal, I mean efforts, and return. Provided same efforts, the return is different &amp;ndash; actually, the difference is so huge, that make people feel that it is unequal.
Job not Equal For the same efforts, in the same industry, doing the same job, the job pay is unequal.</description></item><item><title>Small, Incrementmal Change, in Life</title><link>https://songyangyu.com/posts/small-incrementmal-change-in-life/</link><pubDate>Tue, 03 Nov 2015 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/small-incrementmal-change-in-life/</guid><description>Life is a long process. People changes throughout their own life, and people changed in different ways.
In a few years time, one can see difference amoung people already. For example, in three years time, in the High School studies, students who used to have different capabilities, who can score nearly samiliar high score as others, would go to totally different university. in three years time after graduation, some can be already in VPs position (well, they are really out-standing ones), while some are still in the junior positions.</description></item><item><title>HHKB -- My Review</title><link>https://songyangyu.com/posts/hhkb--my-review/</link><pubDate>Sun, 05 Jul 2015 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/hhkb--my-review/</guid><description>I&amp;rsquo;ve bought a keyboard recently, HHKB. Here&amp;rsquo;s one from amazon
Actually, at the time when I bought it, I&amp;rsquo;m not exactly sure if I need it or not &amp;ndash; the reasons that I bought it, to be honest, are:
I need an external keyboard. It looks geeky, and cool The review says that it is good. However, after two days of usage, I think I may not like it that much (although, I&amp;rsquo;ll be continuing using it).</description></item><item><title>Agile Meetup After Thoughts -- Distribute Human Group</title><link>https://songyangyu.com/posts/agile-meetup-after-thoughts--distribute-human-group/</link><pubDate>Tue, 21 Oct 2014 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/agile-meetup-after-thoughts--distribute-human-group/</guid><description>I went to the agile meetup today. I like how the agile meetup runs:
Break 2 hours&amp;rsquo; time down to 4 sections, each section is 0.5h long. At each section, there&amp;rsquo;re 4 groups: A B C D Anyone can initiate any idea, to host a discussion in one group, at one section. Any topic is good What happened is what should happen Anyone is free to join any section; anyone can quit any section at any time This is totally self-organizing, which in a sense means, agile.</description></item><item><title>JS Tricks from JS-puzzlers</title><link>https://songyangyu.com/posts/js-tricks-from-js-puzzlers/</link><pubDate>Sun, 23 Feb 2014 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/js-tricks-from-js-puzzlers/</guid><description>Javascript-Puzzlers is a nice place for people to.. test their JS knowledge :)
I wrote some code to learn&amp;amp;verify JS&amp;rsquo;s behaviour while solving the problems. I&amp;rsquo;ll try to put the result below.
Meanwhile, I&amp;rsquo;ve also put the JS source code here.
// Question #1: [&amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;].map(parseInt) // Verify as below var a = [&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;,&amp;#39;3&amp;#39;]; // This would show the input that `map` feeds to the callback a.map(function(){console.log(arguments);}); // output of one of the lines: { &amp;#39;0&amp;#39;: &amp;#39;1&amp;#39;, &amp;#39;1&amp;#39;: 0, &amp;#39;2&amp;#39;: [ &amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39; ] } console.</description></item><item><title>MeaningFul and MeaningLess</title><link>https://songyangyu.com/posts/meaningful-and-meaningless/</link><pubDate>Sat, 21 Dec 2013 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/meaningful-and-meaningless/</guid><description>There is an interesting effect: people tends to do, or even addicted into, the meaningless things, rather than the meaningful ones. For example, playing the game &amp;lsquo;clash of clans&amp;rsquo; is actually meaningless, because everything is built on virtual data, which doesn&amp;rsquo;t make much difference to people&amp;rsquo;s life; but, however, it does make some difference to the player&amp;rsquo;s life: player has emotional attachment after invested a great amount of time into that game, and lots of time (which can be potentially invested into lots of other things) has been wasted.</description></item><item><title>Speed is the king</title><link>https://songyangyu.com/posts/speed-is-the-king/</link><pubDate>Fri, 28 Jun 2013 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/speed-is-the-king/</guid><description>I&amp;rsquo;ve been always believing that.. Idea is cheap, because implementation is hard. While for simple ideas, implementation is not-always hard, esp. when developer only want to create a basic working example &amp;ndash; i.e., not worrying too much about the detailed implementations.
It&amp;rsquo;s believed that.. for a simple idea, 80% of the features &amp;ndash; the main feature, can be implemented within 20% of the time &amp;ndash; and that&amp;rsquo;s the main functionality.</description></item><item><title>On Concentraion and Focus</title><link>https://songyangyu.com/posts/on-concentraion-and-focus/</link><pubDate>Tue, 18 Jun 2013 00:00:00 +0800</pubDate><guid>https://songyangyu.com/posts/on-concentraion-and-focus/</guid><description>Mr. Luo Yonghao&amp;rsquo;s Smartsian OS was published with Pre-alpha, and the outcome of that OS is pretty bad.
I read about the comments online, from Zhihu especially. There&amp;rsquo;was one post especially gained my attendtion. It says that Mr.Luo is not a kind of consistent person &amp;ndash; he always try doing different things: English Teacher, English Education Agency, NiuBo website, Movie Director, etc. Everything time when he wanted to do something, he started really big &amp;ndash; boast about how successful he can be, but the end result is usually not that successful.</description></item><item><title>About</title><link>https://songyangyu.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://songyangyu.com/about/</guid><description>Song Yangyu National University of Singapore, Graduated Works in Shopee, currently Contact: Email: flyfy1@gmail.com On the Web: LinkedIn Facebook StackOverFlow Inspiration # Keep Looking, Don&amp;#39;t Settle. while stillAlive do while goalNotYetReached do workWithPassion sleepWithPassion end goalColibration end</description></item></channel></rss>